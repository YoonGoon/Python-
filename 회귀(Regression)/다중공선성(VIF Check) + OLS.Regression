
# 필요한 라이브러리 로드  
import pandas as pd 
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import statsmodels.api as sm
import statsmodels.formula.api as smf
from statsmodels.stats.outliers_influence import variance_inflation_factord

df = pd.read_csv('*.csv', encoding = 'euc-kr') #csv파일의 인코딩에 따라 utf-8, cp949로 csv파일 로딩

df1 = df['*']  # 데이터 레이블 분리 다중공선성 확인을 위해 종속변수와 독립변수들의 구분
df2 = df['*'] 



#다중공선성 확인 전, 각 독립변수들간의 상관분석 및 상관관계 확인을 위한 산점도 그래프 

corr=df1.corr(method='pearson') #피어슨 계수를 통한 판다스 기본 상관분석
%matplotlib inline
plt.figure(figsize=(20,20))
corimg=sns.heatmap(data=corr,annot=True, fmt='.2f',cmap='Blues' )

# 다중공선성 확인 
vif2 = pd.DataFrame()
vif2["VIF Factor"] = [variance_inflation_factor(
    df1, i) for i in range(df1.shape[1])]
vif2["features"] = df1.columns
vif2 
# 다중공선성 확인 시, 독립 변수의 VIF값이 10 이상이면 다중공선성의 문제가 있으므로
# 회귀분석시에 문제가 될 수 있는 독립변수의 피쳐 드랍 또는 데이터의 변형이 필요함




#OLS 모델생성을 위한 Train, Test data 스플릿 ( 트레인, 테스트 사이즈는 회귀분석 모델에 따라 임의로 변경 ) 
from sklearn.model_selection import train_test_split
X = df1
y = df2
train_x, test_x, train_y, test_y = train_test_split(X, y, train_size=0.8, test_size=0.2,random_state = 42)
print(train_x.shape, test_x.shape, train_y.shape, test_y.shape)


#OLS 회귀분석과 종합 확인 
multi_reg = sm.OLS(train_y, train_x)
fitted_multi_reg=multi_reg.fit()
fitted_multi_reg.summary()


# OLS 모델의 성능 평가 - 회귀분석의 손실함수로는 RMSE를 주로 이용(낮으면 낮을수록 좋다) 
# R2 결정계수, RMSE, MAE 
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
print('RMSE:{}'.format(mean_squared_error(test_y, fitted_multi_reg.predict(test_x))**0.5))
print('MAE:{}'.format(mean_absolute_error(test_y, fitted_multi_reg.predict(test_x))))
print('R2 score :{}'.format(r2_score(test_y,rf.predict(test_x)))

# TEST데이터의 시각화 

plt.figure(figsize=(15,15))
plt.plot(np.array(fitted_multi_reg.predict(test_x)),label="pred", col ='blue')
plt.plot(np.array(test_y),label="true", col = 'red')
plt.legend()
plt.show()

#예측값 도출 (테스트 데이터는 트레인 데이터와 동일한 피쳐와, 수가 되어야 한다. )

test_prediction = fitted_multi_reg.predict(테스트 데이터)
test_prediction 



