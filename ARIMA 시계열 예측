# 라이브러리포트 

import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf
from statsmodels.tsa.stattools import adfuller
from statsmodels.tsa.arima_model import ARIMA

#필요한 데이터 로드( 분석을 위한 데이터 전처리는 생략 )
series = pd.read_csv('*.csv')

#PACF, ACF 확인
plot_acf(series)
plot_pacf(series)
plt.show()

# ADF 확인으로 stationary 여부 확인
def adf_check(ts):
    result = adfuller(ts)
    if result[1] <= 0.05:
        print('Stationary {}'.format(result[1]))
    else:
        print('Non Stationary {}'.format(result[1]))
adf_check(series)

# 위의 확인 후, 차분이 필요한 경우 추가적인 차분 진행

diff_1=series.diff(periods=1).iloc[1:]
diff_1.plot()
plot_acf(diff_1)
plot_pacf(diff_1)
plt.show()

#모델 생성
# AR모형의 Lag을 의미하는 p, MA모형의 Lag을 의미하는 q, 차분(Diffrence)횟수를 의미하는 d 보통은 p, d, q
#통상적으로 p + q < 2, p * q = 0 인 값들을 많이 사용

#model = ARIMA(series, order=(p,d,q))  
model = ARIMA(series, order=(0,1,1)) # 차분 1회진행 
model_fit = model.fit(trend='nc',full_output=True, disp=1)
print(model_fit.summary())

#예측값과 실제값의 비교
model_fit.plot_predict()

#향후 예측값 도출 (steps로 향후 몇 기준시간 이후의 값을 도출해낼 것인지 설정)
fore = model_fit.forecast(steps=1)
print(fore)
